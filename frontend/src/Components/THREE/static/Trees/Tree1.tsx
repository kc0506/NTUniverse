/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

// @ts-nocheck

import React, { useRef, useState } from 'react'
import {
    useGLTF,

} from '@react-three/drei'
import { Object3DProps, useFrame } from '@react-three/fiber'
import { Group, Vector3 } from 'three'
import { useSpring, animated, config, useSpringRef } from '@react-spring/three'
import { Button, Modal } from 'antd';
import { useMyContext } from '../../../../Utils/useMyContext'
import { Triplet } from '@react-three/cannon'


const Tree1 = (props: Object3DProps) => {
    const group = useRef<Group>(null!)
    const { nodes, materials } = useGLTF('https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/tree-lime/model.gltf')
    const { setTutorialModalOpen } = useMyContext();

    /**
     * Scale
     */
    const [isLarge, setIsLarge] = useState(false);
    const { scale } = useSpring({
        scale: isLarge ? 1.5 : 1,
        config: {
            tension: 250,
            friction: 18,
            mass: 3,
            clamp: true,
        }
    });

    /**
     * Rotation
     */
    const api = useSpringRef();
    const { rotation } = useSpring({
        ref: api,
        from: {
            rotation: [0, 0, 0],
        },
        to: {
            rotation: [0, Math.PI * 2, 0],
        },
        loop: true,
        config: {
            tension: 250,
            friction: 18,
            mass: 3,
            clamp: true,
            duration: 6000,
        },
    });

    const handleTreeEnter = (e) => {
        api.start();
        setIsLarge(true);
    }

    const handleTreeLeave = (e) => {
        setIsLarge(false);
        api.stop();
    }


    /**
     * Render
     * - Animation after aligning
     */

    return (
        <group {...props}>
            <animated.mesh rotation={rotation} scale={scale}>
                <mesh
                    // basic
                    geometry={nodes['tree-lime'].geometry}
                    material={materials.color_main}
                    position={[0, 0, 0.75]}

                    // Enter Effect
                    onPointerEnter={handleTreeEnter}
                    onPointerLeave={handleTreeLeave}
                    onClick={setTutorialModalOpen}
                />
            </animated.mesh>
        </group>
    )
}

export default Tree1;

useGLTF.preload('https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/tree-lime/model.gltf')